{% extends "usuarios/usuariosMaster.jinja" %}
{% block head %}
    {{ super() }}
    <style>
    video, canvas {
      -webkit-transform: scaleX(-1);
      transform: scaleX(-1);
    }
    </style>
{% endblock %}

{% block content %}

<div id="modal-alerts" style="display: none;" class="modal fade p-5">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title ">Alertas</h1>
        <h3 class="close" data-dismiss="modal"><i class="bi bi-x-lg"></i></s>
      </div>
      <div class="modal-body">
        <h2 id="modal-text"></h2>
      </div>
    </div>
  </div>
</div>

<div class="d-flex flex-column align-items-center justify-content-center">

  <video id="video" style="z-index: 0;object-fit:cover;"></video>
  <canvas id="canvasFoto" class="position-absolute" style="top: 0; z-index: 2;object-fit:cover"></canvas>
  <canvas id="canvasResult" class="position-absolute" style="top: 0; z-index: 3;object-fit:cover"></canvas>
  
  <button id="capture-btn" class="btn btn-danger position-absolute " style="border-radius: 50%; border: 2px solid rgb(205, 205, 205); background-color:rgba(231, 231, 231, 0.532); height: 80px; width:80px; bottom: 10%; left: calc(50% - 40px); z-index: 4;"></button>
  
  <div id="options" class="position-absolute w-50 " style="bottom: 15%; left: 25%; display: none; z-index: 5;">
    <button class="btn btn-outline-danger" id="retomar">Retomar</button>
    <button class="btn btn-outline-danger" id="continuar">Continuar</button>
  </div>
  <div id="options2" class="position-absolute w-50 " style="bottom: 15%; left: 25%; display: none; z-index: 5;">
    <button class="btn btn-outline-danger" id="sombras">Colocar sombras</button>
    <button class="btn btn-outline-danger" id="labial">Colocar labial</button>
  </div>

</div>

<script>
  // Acceder al video y al botón de captura
  const video = document.getElementById('video');

  // Acceder al lienzo (canvas)
  const canvas1 = document.getElementById('canvasFoto');
  const canvas2 = document.getElementById('canvasResult');
  const context1 = canvas1.getContext('2d');
  const context2 = canvas2.getContext('2d');
  var imageData = canvas1.toDataURL('image/jpeg');
  let capture = true;
  var cameraHeight = 0;
  var cameraWidth = 0;

  var jsonProductos = {
    "Labial": "0:0",
    "Sombras": "0:0"
  }

  video.setAttribute('autoplay', '');
  video.setAttribute('muted', '');
  video.setAttribute('playsinline', '');

  navigator.getMedia = ( 
    navigator.mediaDevices ||
    navigator.webkit ||
    navigator.mozGetUserMedia ||
    navigator.msGetUserMedia
  );

  // Obtener acceso a la cámara
  navigator.getMedia.getUserMedia({video:true})
      .then(stream => {
          // Mostrar el flujo de la cámara en el elemento de video
          video.srcObject = stream;

          video.height = screen.height;
          video.width = screen.width;

          let stream_data = stream.getVideoTracks()[0].getSettings();
          cameraHeight = stream_data.height;
          cameraWidth = stream_data.width;
      })
      .catch(error => {
          console.error('Error al acceder a la cámara: ', error);
      });

  // Capturar foto cuando se hace clic en el botón
  $('#capture-btn').on('click', function(){
    if(capture){
      // Dibujar la imagen del video en el lienzo
      canvas1.height = cameraHeight;
      canvas1.width = cameraWidth;
      context1.drawImage(video, 0, 0, canvas1.width, canvas1.height);
      // Obtener la imagen como base64
      imageData = canvas1.toDataURL('image/jpeg');3
      $('#canvasFoto').show();

      $.ajax({
        contentType: 'application/json',
        dataType: 'json',
        data: JSON.stringify({ image: imageData }),
        url: '/revisar_foto',
        type: 'post',
        success: function(response){
          if (response.Orientado){
            capture = !capture;
            // Mostrar el modal
            $('#modal-text').text("Foto tomada exitosamente!");
            $('#modal-alerts').modal('show');
            $('#capture-btn').hide();
            $('#options').show();
          
            // Establecer el temporizador para ocultar el modal después de 3 segundos (3000 ms)
            setTimeout(function() {
              $('#modal-alerts').modal('hide');
            }, 3000);
          }else{
            imageData = '';
            $('#canvasFoto').hide();
            
            // Mostrar el modal
            $('#modal-text').text("Por favor intente colocar su cabeza un poco más derecha para facilitar el sistema de probado");
            $('#modal-alerts').modal('show');
          
            // Establecer el temporizador para ocultar el modal después de 3 segundos (3000 ms)
            setTimeout(function() {
              $('#modal-alerts').modal('hide');
            }, 3000);
          }
        }
      });

    }else{
      $('#canvasFoto').hide();
      $('#canvasResult').hide();
      imageData = '0';  
      capture = !capture;
    }
  });

  $('#retomar').on('click', function(){
      $('#canvasFoto').hide();
      $('#canvasResult').hide();
      $('#options').hide();
      $('#capture-btn').show();
      imageData = '0';  
      capture = !capture;
  });

  $('#continuar').on('click', function(){
    $('#canvasResult').show();
    $.ajax({
      contentType: 'application/json',
      dataType: 'json',
      data: JSON.stringify({ image: imageData }),
      url: '/procesar',
      type: 'post',
      success: function(response){
        // Mostrar la imagen procesada al usuario
        const processedImage = new Image();
        processedImage.onload = function(){
          canvas2.height = video.clientHeight
          canvas2.width = video.clientWidth
          context2.drawImage(processedImage, 0, 0, canvas1.width, canvas1.height)
        }
        processedImage.src = 'data:image/png;base64,' + response.processedImageUrl;
      }
    });
  });
</script>

{% endblock %}